services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy

  discord_bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    environment:
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      API_HOST: api  # Use the service name in Docker
      API_PORT: 8000
    volumes:
      - ./logs:/app/logs
    depends_on:
      - api

volumes:
  postgres_data: